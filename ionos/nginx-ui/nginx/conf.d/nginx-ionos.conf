server {
    listen 80;
    listen [::]:80;
    server_name nginx.ionos.lr-projects.de;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}


map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}


server {
    listen 443 ssl;
    listen [::]:443  ssl;
    http2 on;
    server_name nginx.ionos.lr-projects.de;

    ssl_certificate /cert/live/ionos.lr-projects.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /cert/live/ionos.lr-projects.de/privkey.pem; # managed by Certbot
    include /cert/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /cert/ssl-dhparams.pem; # managed by Certbot

    access_log /var/log/nginx/nginx.access.log;
    error_log /var/log/nginx/nginx.error.log;

    location / {
        allow 10.217.236.0/24;
        deny all; 
        proxy_pass http://127.0.0.1:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: if Pi-hole has web restrictions, this can help
        proxy_http_version 1.1;
        proxy_set_header Connection $connection_upgrade;

        # Optional: improve connection stability
        proxy_read_timeout 90;
    }
}

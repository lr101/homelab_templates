version: 2

backends:
  local:
    type: local
    path: /home/lr/backup

locations:

  # This creates a database dump before the backup and puts nextcloud in maintenance mode.
  # https://docs.nextcloud.com/server/stable/admin_manual/maintenance/backup.html
  nextcloud:
    from: ./nextcloud
    type: volume
    to: local
    hooks:
      before:
        - bash export $(grep -v '^#' nextcloud/.env | xargs)
        - bash docker exec -u root nextcloud-database-1 apt update
        - bash docker exec -u root nextcloud-database-1 apt install -y mysql-client
        - bash docker exec nextcloud-nextcloud-1 /var/www/html/occ maintenance:mode --on
        - bash docker exec nextcloud-database-1 mysqldump --single-transaction -h localhost -u nextcloud -p$NEXTCLOUD_DB_PASSWORD nextcloud > ./nextcloud/backup/nextcloud.bak
      after:
        - bash docker exec nextcloud-nextcloud-1 /var/www/html/occ maintenance:mode --off
        - bash unset $(grep -v '^#' nextcloud/.env | sed -E 's/(.*)=.*/\1/' | xargs)
    
  # https://bitwarden.com/help/backup-on-premise/
  bitwarden:
    from: ./bitwarden
    to: local
    
  glance:
    from: ./glance
    to: local

  # Backup created by HA itself daily and stored in /backup. Is included in this target as well.
  ha:
    from: ./ha
    to: local

  # This back-ups the minio data folder. The minio docs do not state that the server must be stopped.
  # The database is backed up in postgis.
  # https://blog.min.io/back-up-restic-minio/
  monaserver:
    from: ./monaserver
    to: local

  postgis:
    from: ./postgis/backup
    to: local
    hooks:
      before:
        - python3 ../scripts/postgres-hook.py stick-it-db postgres stickitprod tempserver --backup-dir postgis/backup

  # Database backup in postgis
  tempserver:
    from: ./tempserver
    to: local

  traefik:
    from: ./traefik
    to: local

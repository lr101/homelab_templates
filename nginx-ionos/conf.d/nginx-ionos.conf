server {
    listen 80;
    server_name nginx.ionos.lr-projects.de;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name nginx.ionos.lr-projects.de;

    ssl_certificate /cert/live/ionos.lr-projects.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /cert/live/ionos.lr-projects.de/privkey.pem; # managed by Certbot
    include /cert/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /cert/ssl-dhparams.pem; # managed by Certbot
    
    # Security headers (optional but good practice)
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy no-referrer-when-downgrade;

    # Uncomment if you want strict HTTPS (optional)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    access_log /var/log/nginx/nginx.access.log;
    error_log /var/log/nginx/nginx.error.log;

    location / {
        allow 10.217.236.0/24;
        deny all;
        proxy_pass http://localhost:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: if Pi-hole has web restrictions, this can help
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Optional: improve connection stability
        proxy_read_timeout 90;
    }
}
